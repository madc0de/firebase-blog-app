
function existingData() {
  return resource.data
}

function incommingData() {
  return request.resource.data
}

function isSignedIn() {
  return request.auth.uid != null
}

function isUser(user) {
  return  
    user.size() <= 8 &&
      user.email is string && user.email.size() <= 254 &&
      user.displayName is string && user.displayName.size() <= 254 &&
      user.photoUrl is string && user.photoUrl.size() < 2038 &&
      user.roles != null
}

function isPost(post) {
  return 
    post.title is string && post.title.size() < 150 &&
    post.excerpt is string && post.excerpt.size() < 500 &&
    post.status is string && post.status == 'draft' || post.status == 'published' &&
    post.userId == request.auth.uid
}

function isPostBody(postBody) {
  return 
    postBody.userId is string &&
    postBody.body is string
}
    
service cloud.firestore {
  match /databases/{database}/documents {
    match /posts/{postId} {
      allow read: if true;      
      allow create: if isPost(request.resource.data) && isSignedIn()    
      allow update: if isPost(request.resource.data) && isSignedIn() && incommingData().userId == existingData().userId
    }
    
    match /users/{userId} {
    	allow read: if isSignedIn();
      allow create: if isUser(request.resource.data) && isSignedIn()
      allow update: if isUser(request.resource.data) && request.auth.uid == userId 
    } 
    
    match /postbody/{postId} {
    	allow read: if true;
      allow write: if isSignedIn() && 
      		request.auth.uid == incommingData().userId  &&
          isPostBody(request.resource.data)          
    }
    
    match /metadata/values {
    	allow read: if true
    }    
    
	  match /settings/blog {
    	allow read: if true;
    }    
  }
}
