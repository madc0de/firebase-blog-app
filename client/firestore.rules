service cloud.firestore {
  match /databases/{database}/documents {
    match /posts/{postId} {
      allow read: if true;      
      allow create: if validPost() && isSignedIn()    
      allow update: if validPost() && isSignedIn() && incommingData().userId == existingData().userId
    }
    
    match /users/{userId} {
    	allow read: if isSignedIn();
      allow create: if validUser() && isSignedIn() && userId == request.auth.uid 
      allow update: if request.auth.uid == userId && validUser()                     
    }
    
    match /postbody/{postId} {
    	allow read: if true;
      allow write: if isSignedIn() && 
      		request.auth.uid == incommingData().userId  &&
          validPostBody()          
    }
    
    match /metadata/values {
    	allow read: if true
    }    
    
	  match /settings/blog {
    	allow read: if true;
    }    
    
    function validPost() {
    	return 
        incommingData().title != null &&
        incommingData().excerpt != null &&
        incommingData().status != null &&
        incommingData().userId == request.auth.uid
    }
    
    function validPostBody() {
    	return 
        incommingData().postId != null &&
        incommingData().userId != null &&
        incommingData().body != null 
    }
    
    function validUser() {
      return 
        incommingData().email != null &&
        incommingData().displayName != null
    }

    function existingData() {
      return resource.data
    }

    function incommingData() {
      return request.resource.data
    }

    function isSignedIn() {
      return request.auth.uid != null
    }
    
    function getRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role]
    }
  }
}







